blueprint:
  name: SSL Certificate Expiry
  description: Notify when a certificate is about to expire
  domain: automation
  input:
    cert_expiry_sensor:
      name: Certificate Expiry Sensor
      description: The cert_expiry sensor to use
      selector:
        entity:
          domain: sensor
          device_class: timestamp
    cert_expiry_threshold:
      name: Expiry Threshold
      description: The threshold used to trigger the notification
      default: 7
      selector:
        number:
          min: 1
          max: 30
          unit_of_measurement: days
trigger_variables:
  cert_expiry_sensor: !input cert_expiry_sensor
variables:
  cert_expiry_sensor: !input cert_expiry_sensor
trigger:
- platform: time
  at: '04:45:00'
condition:
- condition: numeric_state
  entity_id: !input cert_expiry_sensor
  value_template: >
    {{ ((as_timestamp(states(cert_expiry_sensor), 0) - as_timestamp(now())) / 86400) }}
  below: !input cert_expiry_threshold
action:
- service: notify.slack
  data:
    message: >
      {%- set cert_name = state_attr(cert_expiry_sensor, 'friendly_name').split(' ') | first -%}
      {%- set cert_link = '<https://' ~ cert_name ~ '|' ~ cert_name ~ '>' -%}

      {%- if state_attr(cert_expiry_sensor, 'is_valid') -%}
        The certificate for {{ cert_link }} will expire in {{ ((as_timestamp(states(cert_expiry_sensor), 0) - as_timestamp(now())) / 86400) | int }} days.
      {%- elif is_state(cert_expiry_sensor, 'unavailable') -%}
        The certificate for {{ cert_link }} could not be retrieved.
      {%- else -%}
        {%- set error = state_attr(cert_expiry_sensor, 'error') -%}
        The certificate for {{ cert_link }} is invalid: {{ 'Unknown error' if (error == None) else error }}
      {%- endif -%}
mode: single
